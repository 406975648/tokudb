diff -Nur a/patch_info/status_wait_query_cache_mutex.info b/patch_info/status_wait_query_cache_mutex.info
--- a/patch_info/status_wait_query_cache_mutex.info	1970-01-01 03:00:00.000000000 +0300
+++ b/patch_info/status_wait_query_cache_mutex.info	2010-07-21 01:42:09.650424002 +0400
@@ -0,0 +1,7 @@
+File=status_wait_query_cache_mutex.patch
+Name=Add new status - Waiting on query cache mutex
+Version=1.0
+Author=Percona <info@percona.com>
+License=GPL
+Comment=
+2010-07 - First version avaliable
diff -Nur a/sql/sql_cache.cc b/sql/sql_cache.cc
--- a/sql/sql_cache.cc	2010-07-21 01:37:51.190424002 +0400
+++ b/sql/sql_cache.cc	2010-07-21 01:48:50.180424002 +0400
@@ -610,6 +610,9 @@
   DBUG_ENTER("Query_cache::try_lock");
 
   pthread_mutex_lock(&structure_guard_mutex);
+  DBUG_EXECUTE_IF("status_wait_query_cache_mutex_sleep", {
+      my_sleep(3000);
+    });
   while (1)
   {
     if (m_cache_lock_status == Query_cache::UNLOCKED)
@@ -634,6 +637,9 @@
     else
     {
       DBUG_ASSERT(m_cache_lock_status == Query_cache::LOCKED);
+      THD *thd = current_thd;
+      const char* old_proc_info= thd->proc_info;
+      thd_proc_info(thd,"Waiting on query cache mutex");
       /*
         To prevent send_result_to_client() and query_cache_insert() from
         blocking execution for too long a timeout is put on the lock.
@@ -654,6 +660,7 @@
       {
         pthread_cond_wait(&COND_cache_status_changed, &structure_guard_mutex);
       }
+      thd->proc_info = old_proc_info;
     }
   }
   pthread_mutex_unlock(&structure_guard_mutex);
