# name       : mysql-syslog.patch
# introduced : 12
# maintainer : Oleg
#
#!!! notice !!!
# Any small change to this file in the main branch
# should be done or reviewed by the maintainer!
diff -ruN a/client/client_priv.h b/client/client_priv.h
--- a/client/client_priv.h	2010-08-08 14:12:42.229338865 +0400
+++ b/client/client_priv.h	2010-08-08 14:12:43.068089277 +0400
@@ -85,6 +85,7 @@
   OPT_DEBUG_INFO, OPT_DEBUG_CHECK, OPT_COLUMN_TYPES, OPT_ERROR_LOG_FILE,
   OPT_WRITE_BINLOG, OPT_DUMP_DATE,
   OPT_INIT_COMMAND,
+  OPT_SYSLOG,
   OPT_PLUGIN_DIR,
   OPT_DEFAULT_PLUGIN,
   OPT_MAX_CLIENT_OPTION
diff -ruN a/client/mysql.cc b/client/mysql.cc
--- a/client/mysql.cc	2010-08-08 14:12:42.229338865 +0400
+++ b/client/mysql.cc	2010-08-08 14:12:43.488088866 +0400
@@ -38,6 +38,9 @@
 #include "my_readline.h"
 #include <signal.h>
 #include <violite.h>
+#ifndef __WIN__
+#include "syslog.h"
+#endif
 
 #if defined(USE_LIBEDIT_INTERFACE) && defined(HAVE_LOCALE_H)
 #include <locale.h>
@@ -140,7 +143,7 @@
                default_pager_set= 0, opt_sigint_ignore= 0,
                auto_vertical_output= 0,
                show_warnings= 0, executing_query= 0, interrupted_query= 0,
-               ignore_spaces= 0;
+               opt_syslog=0, ignore_spaces= 0;
 static my_bool debug_info_flag, debug_check_flag;
 static my_bool column_types_flag;
 static my_bool preserve_comments= 0;
@@ -198,6 +201,7 @@
 void tee_fputs(const char *s, FILE *file);
 void tee_puts(const char *s, FILE *file);
 void tee_putc(int c, FILE *file);
+void write_syslog(char *line);
 static void tee_print_sized_data(const char *, unsigned int, unsigned int, bool);
 /* The names of functions that actually do the manipulation. */
 static int get_options(int argc,char **argv);
@@ -1561,6 +1565,10 @@
   {"show-warnings", OPT_SHOW_WARNINGS, "Show warnings after every statement.",
     &show_warnings, &show_warnings, 0, GET_BOOL, NO_ARG,
     0, 0, 0, 0, 0, 0},
+#ifndef __WIN__
+  {"syslog", OPT_SYSLOG, "Logs all queries to syslog", 0, 0, 0, GET_NO_ARG,
+   REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
+#endif
   {"plugin_dir", OPT_PLUGIN_DIR, "Directory for client-side plugins.",
    (uchar**) &opt_plugin_dir, (uchar**) &opt_plugin_dir, 0,
    GET_STR, REQUIRED_ARG, 0, 0, 0, 0, 0, 0},
@@ -1665,6 +1673,12 @@
                                     opt->name);
 #endif
     break;
+  case OPT_SYSLOG:
+    /*if (connect_flag == CLIENT_INTERACTIVE){
+      printf("Logging queries to syslog.\n");
+    }*/
+    opt_syslog = 1;
+    break;
   case OPT_SERVER_ARG:
 #ifdef EMBEDDED_LIBRARY
     /*
@@ -2014,6 +2028,39 @@
   DBUG_RETURN((COMMANDS *) 0);
 }
 
+void write_syslog(char *line){
+#ifndef __WIN__
+  char buff[901];
+  int i, buff_pos=0;
+  for (i=0;i < strlen(line); i++){
+    buff[buff_pos] = line[i];
+    buff_pos++;
+    if (buff_pos >= 900){
+      buff[900] = NULL;
+      buff_pos = 0;
+      syslog(LOG_INFO, "SYSTEM_USER:%s, MYSQL_USER:%s, CONNECTION_ID:%lu, DB_SERVER:%s, DB:%s, QUERY:%s",
+             getenv("SUDO_USER") ? getenv("SUDO_USER") :
+             getenv("USER") ? getenv("USER") : "--",
+             current_user ? current_user : "--",
+             mysql_thread_id(&mysql),
+             current_host ? current_host : "--",
+             current_db ? current_db : "--",
+             buff);
+    }
+  }
+  if (buff_pos > 0){
+    buff[buff_pos] = NULL;
+    syslog(LOG_INFO, "SYSTEM_USER:%s, MYSQL_USER:%s, CONNECTION_ID:%lu, DB_SERVER:%s, DB:%s, QUERY:%s",
+           getenv("SUDO_USER") ? getenv("SUDO_USER") :
+           getenv("USER") ? getenv("USER") : "--",
+           current_user ? current_user : "--",
+           mysql_thread_id(&mysql),
+           current_host ? current_host : "--",
+           current_db ? current_db : "--",
+           buff);
+  }
+#endif
+}
 
 static bool add_line(String &buffer,char *line,char *in_string,
                      bool *ml_comment, bool truncated)
@@ -2986,6 +3033,11 @@
     fix_history(buffer);
   }
 #endif
+#ifndef __WIN__
+  if (opt_syslog && buffer->length() && connect_flag == CLIENT_INTERACTIVE){
+    write_syslog(buffer->c_ptr());
+  }
+#endif
 
   buffer->length(0);
 
