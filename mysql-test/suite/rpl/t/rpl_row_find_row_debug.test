#
# Bug#11760927: 53375: RBR + NO PK => HIGH LOAD ON SLAVE (TABLE SCAN/CPU) => SLAVE FAILURE
#
--source include/master-slave.inc
--source include/have_binlog_format_row.inc
--source include/have_debug.inc

# SETUP
# - setup log_warnings and debug

--let LOG_ERROR= $MYSQLTEST_VARDIR/tmp/rpl_row_find_row_debug-slave.err
--let $rpl_server_parameters= --log-error=$LOG_ERROR
--let $rpl_server_number= 2
--let $restart_hide_args= 1
--source include/rpl_restart_server.inc

--connection slave

SET GLOBAL log_warnings = 2;

# force printing the notes to the error log
SET GLOBAL debug="d,inject_long_find_row_note";
--source include/start_slave.inc

# test
--connection master
CREATE TABLE t1 (c1 INT);
--sync_slave_with_master
--connection master

INSERT INTO t1 VALUES (1), (2);
UPDATE t1 SET c1= 1000 WHERE c1=2;
DELETE FROM t1;
DROP TABLE t1;
--sync_slave_with_master

--echo # Check if any note related to long DELETE_ROWS and UPDATE_ROWS appears in the error log
perl;
  use strict;
  my $log_error= $ENV{'LOG_ERROR'} or die "LOG_ERROR not set";
  open(FILE, "$log_error") or die("Unable to open $log_error: $!\n");
  my $upd_count = () = grep(/The slave is applying a ROW event on behalf of an UPDATE statement on table t1 and is currently taking a considerable amount/g,<FILE>);
  seek(FILE, 0, 0) or die "Can't seek to beginning of file: $!";
  my $del_count = () = grep(/The slave is applying a ROW event on behalf of a DELETE statement on table t1 and is currently taking a considerable amount/g,<FILE>);
  print "Occurrences: update=$upd_count, delete=$del_count\n";
  close(FILE);
EOF

# cleanup
--source include/stop_slave.inc
--let $rpl_server_parameters=
--source include/rpl_restart_server.inc
--source include/start_slave.inc

--remove_file $LOG_ERROR

--source include/rpl_end.inc
